rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Kullanıcılar koleksiyonu için kurallar
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if false;
    }

    // Belediye koleksiyonu için kurallar
    match /municipalities/{municipalityId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid));
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.uid;
    }
    
    // Şirket koleksiyonu için kurallar
    match /companies/{companyId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid));
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.uid;
    }

    // Pano koleksiyonu için kurallar
    match /billboards/{billboardId} {
      // Temel okuma izni
      allow read: if request.auth != null;
      
      // Belediye kullanıcıları için tam yetki
      allow create, delete: if request.auth != null && 
        exists(/databases/$(database)/documents/municipalities/$(request.auth.uid));
      
      // Güncelleme kuralları
      allow update: if request.auth != null && (
        // Belediye kullanıcıları için tam güncelleme yetkisi
        exists(/databases/$(database)/documents/municipalities/$(request.auth.uid)) ||
        
        // Şirket kullanıcıları için teklif verme yetkisi
        (
          exists(/databases/$(database)/documents/companies/$(request.auth.uid)) &&
          request.resource.data.keys().hasAll(resource.data.keys()) &&
          resource.data.status == 'active' &&
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['currentBid', 'currentBidderId', 'updatedAt']) &&
          request.resource.data.currentBidderId == request.auth.uid &&
          (resource.data.currentBid == null || request.resource.data.currentBid > resource.data.currentBid)
        )
      );
    }

    // Teklifler koleksiyonu için kurallar
    match /bids/{bidId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
        exists(/databases/$(database)/documents/companies/$(request.auth.uid));
      allow update: if request.auth != null && (
        // Şirket kullanıcıları kendi tekliflerini güncelleyebilir
        (exists(/databases/$(database)/documents/companies/$(request.auth.uid)) &&
        resource.data.companyId == request.auth.uid) ||
        // Belediye kullanıcıları açık artırma sonlandırma sırasında teklifleri güncelleyebilir
        (exists(/databases/$(database)/documents/municipalities/$(request.auth.uid)) &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status', 'updatedAt']))
      );
      allow delete: if request.auth != null && 
        exists(/databases/$(database)/documents/companies/$(request.auth.uid)) &&
        resource.data.companyId == request.auth.uid;
    }
  }
} 